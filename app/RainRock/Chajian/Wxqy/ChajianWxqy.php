<?php
 namespace App\RainRock\Chajian\Wxqy; use App\RainRock\Chajian\Chajian; use Rock; use App\Model\Base\WxqyagentModel; class ChajianWxqy extends Chajian { protected $URL_public = 'https:&#47;&#47;qyapi.weixin.qq.com/cgi-bin/'; protected $URL_gettoken = 'gettoken'; protected $URL_jsapiticket = 'get_jsapi_ticket'; protected $URL_messagesend = 'message/send'; protected $URL_mediaupload = 'media/upload'; protected $URL_mediaget = 'media/get'; protected $URL_getuserinfo = 'user/getuserinfo'; protected $URL_userlist = 'user/list'; protected $URL_userget = 'user/get'; protected $URL_usercreate = 'user/create'; protected $URL_userupdate = 'user/update'; protected $URL_userdelete = 'user/delete'; protected $URL_batchdelete = 'user/batchdelete'; protected $URL_deptlist = 'department/list'; protected $URL_deptcreate = 'department/create'; protected $URL_deptupdate = 'department/update'; protected $URL_deptdelete = 'department/delete'; protected $URL_agentlist = 'agent/list'; protected $URL_agentget = 'agent/get'; protected $URL_agentset = 'agent/set'; protected $URL_chatcreate = 'appchat/create'; protected $URL_chatsend = 'appchat/send'; protected $URL_checkindata = 'checkin/getcheckindata'; protected $URL_checkinoption= 'checkin/getcheckinoption'; protected $URL_menuget = 'menu/get'; protected $URL_menudelete = 'menu/delete'; protected $URL_menucreate = 'menu/create'; public $corpid = ''; public $secret = ''; public $backarr = array(); public $deptrootid = 1; public function initWeixin(){} protected function initChajian() { $this->backarr = array('errcode'=>-1, 'msg'=>'sorry,error'); $this->option = $this->getNei('option'); $djid = (int)$this->option->getval('weixinqy_deptid','0'); if($djid>0)$this->deptrootid = $djid; $this->initWeixin(); } public function gettourl($can) { $url = $this->URL_public; if(substr($url,0,4)!='http'){ $jm = c('rockjm'); $url = $jm->uncrypt($url); $url.= $jm->uncrypt($this->$can); }else{ $url.= $this->$can; } if(substr($url,0,4)!='http'){ echo json_encode($this->backerror('访问有误，请重新安装模块')); exit; } return $url; } public function readwxset() { if($this->corpid!='')return; $this->corpid = $this->option->getval('weixinqy_corpid'); $this->secret = $this->option->getval('weixinqy_secret'); if($this->corpid=='')exit('没有设置企业微信'); return $this->corpid; } public function gethuidiao() { $huitoken = $this->option->getval('weixinqy_huitoken'); $aeskey = $this->option->getval('weixinqy_aeskey'); $corpid = $this->corpid; if($corpid=='')$corpid = $this->option->getval('weixinqy_corpid'); return array( 'huitoken' => $huitoken, 'aeskey' => $aeskey, 'corpid' => $corpid, ); } public function cleartoken($lx=0, $isyy=false) { $num = 'weixinqy_token'.$lx.''; if($isyy)$num.='_agent'; $this->option->setval($num,''); } public function gettoken($lx=0, $isyy=false) { $time = date('Y-m-d H:i:s', time()-2*3600); $num = 'weixinqy_token'.$lx.''; if($isyy)$num.='_agent'; $rs = $this->option->getone("`num`='$num' and `optdt`>'$time'"); $val = ''; if($rs)$val = $rs['value']; if(isempt($val)){ $this->readwxset(); $secret = $this->secret; if($lx>0 || $isyy){ $faret = WxqyagentModel::where(['cid'=>$this->companyid,'agentid'=>$lx])->first(); if(!$faret)return $this->backerror('微信应用不存在'.$lx.''); $secret = $faret->secret; } if($isyy && isempt($secret))return $this->tokenerr('请先设置应用的secret'); if(isempt($secret))return $this->tokenerr('请先设置的secret');; $url = ''.$this->gettourl('URL_gettoken').'?corpid='.$this->corpid.'&corpsecret='.$secret.''; $arr = $this->runcurl($url); if($arr->errcode!=0)return $this->backerror($arr->errmsg); $val = $arr->access_token; $this->option->setval($num, $val); } return $val; } public function getticket($lx) { $time = date('Y-m-d H:i:s', time()-2*3600); $num = 'weixinqy_jssdk_token'.$lx.''; $rs = $this->option->getone("`num`='$num' and `optdt`>'$time'"); $val = ''; if($rs)$val = $rs['value']; if(isempt($val)){ $token = $this->gettoken($lx); $url = ''.$this->gettourl('URL_jsapiticket').'?access_token='.$token.''; $result = c('curl')->getcurl($url); if($result != ''){ $arr = json_decode($result); if(!isset($arr->ticket)){ showreturn('', $result, 201); }else{ $val = $arr->ticket; $this->option->setval($num, $val); } } } return $val; } public function setbackarr($code, $msg) { $msg = $this->geterrstr($code, $msg); $this->backarr = array('errcode'=>$code, 'msg'=>$msg); return $this->backarr; } public function backerror($msg, $code=-1) { return $this->setbackarr($code, $msg); } public function clearalltoken() { $this->option->update("value=null", "`num` like 'weixinqy\_%'"); } public function tokenerr($msg) { $this->backarr['msg'] = '无法获取token:'.$msg.''; return $this->backarr; } private $errorarray = false; public function geterrstr($code, $str1='') { $str = '{"40001":"不合法的secret参数","40003":"无效的UserID","40004":"不合法的媒体文件类型","40005":"不合法的type参数","40006":"不合法的文件大小","40007":"不合法的media_id参数","40008":"不合法的msgtype参数","40013":"不合法的CorpID","40014":"不合法的access_token","40016":"不合法的按钮个数","40017":"不合法的按钮类型","40018":"不合法的按钮名字长度","40019":"不合法的按钮KEY长度","40020":"不合法的按钮URL长度","40022":"不合法的子菜单级数","40023":"不合法的子菜单按钮个数","40024":"不合法的子菜单按钮类型","40025":"不合法的子菜单按钮名字长度","40026":"不合法的子菜单按钮KEY长度","40027":"不合法的子菜单按钮URL长度","40029":"不合法的oauth_code","40031":"不合法的UserID列表","40032":"不合法的UserID列表长度","40033":"不合法的请求字符","40054":"不合法的子菜单url域名","40055":"不合法的菜单url域名","40056":"不合法的agentid","40057":"不合法的callbackurl或者callbackurl验证失败","40058":"不合法的参数","40059":"不合法的上报地理位置标志位","40063":"参数为空","40066":"不合法的部门列表","40068":"不合法的标签ID","40071":"不合法的标签名字","40072":"不合法的标签名字长度","40073":"不合法的openid","40074":"news消息不支持保密消息类型","40077":"不合法的pre_auth_code参数","40078":"不合法的auth_code参数","40080":"不合法的suite_secret","40082":"不合法的suite_token","40083":"不合法的suite_id","40084":"不合法的permanent_code参数","40085":"不合法的的suite_ticket参数","40086":"不合法的第三方应用appid","40092":"导入文件存在不合法的内容","40093":"不合法的jsapi_ticket参数","40094":"不合法的URL","41001":"缺少access_token参数","41002":"缺少corpid参数","41004":"缺少secret参数","41008":"缺少auth code参数","41009":"缺少userid参数","41010":"缺少url参数","41011":"缺少agentid参数","41016":"缺少title参数","41017":"缺少tagid参数","41021":"缺少suite_id参数","41025":"缺少permanent_code参数","42001":"access_token已过期","42007":"pre_auth_code已过期","42009":"suite_access_token已过期","43004":"指定的userid未绑定微信或未关注微信插件","44004":"文本消息content参数为空","45001":"多媒体文件大小超过限制","45002":"消息内容大小超过限制","45004":"应用description参数长度不符合系统限制","45007":"语音播放时间超过限制","45008":"图文消息的文章数量不符合系统限制","45009":"接口调用超过限制","45022":"应用name参数长度不符合系统限制","45024":"帐号数量超过上限","45026":"触发删除用户数的保护","45032":"图文消息author参数长度超过限制","46003":"菜单未设置","48002":"API接口无权限调用","48003":"不合法的suite_id","48004":"授权关系无效","48005":"API接口已废弃","50001":"redirect_url未登记可信域名","50002":"成员不在权限范围","50003":"应用已禁用","60001":"部门长度不符合限制","60003":"部门ID不存在","60004":"父部门不存在","60005":"部门下存在成员","60006":"部门下存在子部门","60007":"不允许删除根部门","60008":"部门已存在","60009":"部门名称含有非法字符","60010":"部门存在循环关系","60011":"指定的成员\/部门\/标签参数无权限","60012":"不允许删除默认应用","60020":"访问ip不在白名单之中","60102":"UserID已存在","60103":"手机号码不合法","60104":"手机号码已存在","60105":"邮箱不合法","60106":"邮箱已存在","60110":"用户所属部门数量超过限制","60111":"UserID不存在","60112":"成员name参数不合法","60123":"无效的部门id","60124":"无效的父部门id","60125":"非法部门名字","60127":"缺少department参数","60129":"成员手机和邮箱都为空","72023":"发票已被其他公众号锁定","72024":"发票状态错误","72037":"存在发票不属于该用户","80001":"可信域名不正确，或者无ICP备案","81001":"部门下的结点数超过限制（3W）","81002":"部门最多15层","81011":"无权限操作标签","82002":"不合法的PartyID列表长度","82003":"不合法的TagID列表长度","84019":"缺少templateid参数","84020":"templateid不存在","84021":"缺少register_code参数","84022":"无效的register_code参数","84023":"不允许调用设置通讯录同步完成接口","84024":"无注册信息","85002":"包含不合法的词语","85004":"每企业每个月设置的可信域名不可超过20个","85005":"可信域名未通过所有权校验","301024":"获取打卡数据时间间隔不能大于93天"}'; if(!$this->errorarray)$this->errorarray = json_decode($str, true); $bstr = arrvalue($this->errorarray, $code); if(!isempt($bstr)){ $str1 = '('.$bstr.')'.$str1.','.c('help')->show('wxqymsg').''; } return $str1; } public function runcurl($url, $body='') { $barr = $this->backarr; if($body==''){ $carr = Rock::curlget($url); }else{ $carr = Rock::curlpost($url, $body); } $bdx = new \StdClass(); $bdx->errcode = -1; $bdx->errmsg = 'error('.$url.')'; if(!$carr['success']){ $bdx->errmsg = $carr['msg']; return $bdx; } $result = $carr['data']; if(isempt($result)){ $bdx->errmsg = '没有返回数据'; return $bdx; } return json_decode($result); } }